server:
  port: 8081

spring:
  application:
    name: book-service
  sql:
    init:
      mode: always
      platform: postgresql
  datasource:
    url: jdbc:postgresql://book-postgres:5435/bookdb
    username: book_service_user
    password: bookpass
    driver-class-name: org.postgresql.Driver
  jpa:
    defer-datasource-initialization: true
    hibernate:
      ddl-auto: update # Or validate in prod, none if using Flyway/Liquibase
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
    show-sql: true
  kafka:
    bootstrap-servers: kafka:9092
    consumer:
      group-id: borrow-saga
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: '*'
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
api:
  gateway:
    secret: M3lT#9fGz!8qP@Z^rKw!5xL7e2Bj&T0v

eureka:
  client:
    serviceUrl:
      defaultZone: http://discovery-service:8761/eureka/
  instance:
    prefer-ip-address: true

# Optional: Logging configuration
logging:
  level:
    com.librarysystem.bookservice: DEBUG
    org.springframework.web: INFO
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql: TRACE

springdoc:
  api-docs:
    enabled: true
    path: /api/books/v3/api-docs
  swagger-ui:
    enabled: true
    path: /api/books/swagger-ui.html
